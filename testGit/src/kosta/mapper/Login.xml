<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="kosta.mapper.EmpMapper">
	<cache />
	<select id = "loginEmp" parameterType = "Login" resultType="Emp">
		select * from emp
		where id = #{id} and pass = #{pass}
	</select>
	
	<insert id = "insertEmp" parameterType = "Emp">
		insert into emp(
			e_no, id, pass, name, phone_number, signupcheck
		) values(
			#{e_no}, #{id}, #{pass}, #{name}, #{phone_number}, 0
		)
	</insert>
	
	<select id = "checkId" parameterType = "String" resultType="int">
		select count(*) from emp
		where id = #{id}
	</select>
	
	<select id = "listSignUpApprove" resultType="Emp">
		select * from emp
		where signupcheck = 0 
	</select>
	
	<select id = "listEmp" parameterType="int" resultType="Emp">
		select * from emp
		where d_no = #{d_no}
	</select>
	
	<update id = "updateEmp" parameterType = "Emp">
		update emp set hiredate = #{hiredate}, d_no = #{d_no}, grade = #{grade}, signupcheck = #{signupcheck} 
		where e_no = #{e_no}	
	</update>
	
	<insert id = "checkIn" parameterType = "int">
		insert into attendance(
			a_no, e_no, a_date, a_checkin
		) values(
			a_no_seq.nextval, #{e_no}, to_date(sysdate,'YYYY-MM-DD'), to_char(sysdate,'HH24:MI')
		)
	</insert>
	
 	<update id = "checkOut" parameterType = "int">
		update attendance set a_checkout = to_char(sysdate,'HH24:MI')
		where e_no = #{e_no} and a_date = to_date(sysdate,'YYYY-MM-DD')
	</update>
	
	<!-- <insert id = "insertBoard" parameterType="Board">
		insert into board(
			seq, title, writer, contents, regdate, hitcount, fname
		) values(
			board_seq.nextval, #{title}, #{writer}, #{contents}, sysdate, 0, #{fname}
		)
	</insert>
	
	<select id="listBoard" parameterType = "Search" resultType="Board">
		select * from board  
		where (title Like %JSP% OR writer Like %JSP%)
		<if test = "area != null">
			<where>
				<foreach collection = "area" item = "item" separator = "OR" open = "(" close = ")">
				${item} LIKE #{searchKey}
				</foreach>
			</where>
		</if>
		order by seq desc
	</select>
	
	
	<select id = "detailBoard" parameterType="int" resultType = "Board">
		select * from board where seq = #{seq} order by seq desc
	</select>
	
	
	<delete id = "deleteBoard" parameterType = "int">
		delete from board where seq = #{seq}
	</delete>
	
	<select id= "countBoard" parameterType = "Search" resultType = "int">
		select count(*) from board
		<if test = "area != null">
			<where>
				<foreach collection = "area" item = "item" separator = "OR" open = "(" close = ")">
				${item} LIKE #{searchKey}
				</foreach>
			</where>
		</if>
	</select>
	
	<insert id = "insertReply" parameterType = "Reply">
		insert into reply
			values(reply_seq.nextval, #{r_title}, #{r_writer}, #{r_contents}, sysdate, #{seq}) 
	</insert>
	
	<select id = "listReply" parameterType="int" resultType="Reply">
		select * from reply where seq = #{seq}
	</select>
 --></mapper>
